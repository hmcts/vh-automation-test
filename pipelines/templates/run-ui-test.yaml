parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Dev
    values:
      - Dev
      - Test
      - Stg
      - Prod
  - name: projectPath
    displayName: Project Path
    type: string
    default: "UI.NUnitVersion"
  - name: testCategory
    displayName: Test Category
    type: string
    default: ""
  - name: testRunTitle
    displayName: Test Run Title
    type: string
    default: "Test Results"
  - name: subscriptionName
    displayName: Key Vault Subscription Name
    type: string
    default: "**/TestResults/*.trx"

steps:
  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: vh-infra-core-${{ lower(parameters.environment) }}"
    inputs:
      azureSubscription: "${{ parameters.subscriptionName }}"
      KeyVaultName: "vh-infra-core-${{ lower(parameters.environment) }}"
      SecretsFilter: "azuread--tenantid"

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: vh-bookings-api-${{ lower(parameters.environment) }}"
    inputs:
      azureSubscription: "${{ parameters.subscriptionName }}"
      KeyVaultName: "vh-bookings-api-${{ lower(parameters.environment) }}"
      SecretsFilter: "azuread--clientid, azuread--clientsecret, azuread--identifieruri"

  - bash: |
      echo "##vso[task.setvariable variable=ApiClientConfiguration.TenantId;issecret=false]$(azuread--tenantid)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.ClientId;issecret=false]$(azuread--clientid)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.ClientSecret;issecret=false]$(azuread--clientsecret)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.BookingsApi.ResourceId;issecret=false]$(azuread--identifieruri)"
    displayName: Change Bookings API client secrets to variables

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: vh-video-api-${{ lower(parameters.environment) }}"
    inputs:
      azureSubscription: "${{ parameters.subscriptionName }}"
      KeyVaultName: "vh-video-api-${{ lower(parameters.environment) }}"
      SecretsFilter: "azuread--identifieruri"

  - bash: |
      echo "##vso[task.setvariable variable=ApiClientConfiguration.VideoApi.ResourceId;issecret=false]$(azuread--identifieruri)"]
      echo $(ApiClientConfiguration.VideoApi.ResourceId)
    displayName: Change Video API client secrets to variables

  # inserts variables to help create unique test names
  - task: gitversion/setup@0
    displayName: Install GitVersion
    inputs:
      versionSpec: "5.11.1"

  - task: gitversion/execute@0
    displayName: Determine Version
    inputs:
      useConfigFile: true
      configFilePath: "GitVersion.yml"

  - task: FileTransform@1
    displayName: Transform App Settings
    inputs:
      folderPath: ${{ parameters.projectpath }}
      fileType: json
      targetFiles: "**/appsettings.json"

  - pwsh: |
      Get-Content "${{ parameters.projectpath }}/appsettings.json"
    displayName: Print App Settings

  # - bash: |
  #     sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
  #   displayName: Add NuGet Feed Authentication
  #   workingDirectory: $(Build.SourcesDirectory)

  # - task: DotNetCoreCLI@2
  #   displayName: Run UI Tests
  #   inputs:
  #     command: test
  #     projects: "${{ parameters.projectpath }}/*.csproj"
  #     publishTestResults: true
  #     testRunTitle: "${{ parameters.testRunTitle }}"
  #     ${{ if eq(parameters.testCategory, '') }}:
  #       arguments: "--configuration Release"
  #     ${{ else }}:
  #       arguments: "--configuration Release --filter TestCategory=${{ parameters.testCategory }}"
