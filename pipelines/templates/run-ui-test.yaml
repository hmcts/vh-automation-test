parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Dev
    values:
      - Dev
      - Demo
      - Test
      - Stg
      - Prod
  - name: projectPath
    displayName: Project Path
    type: string
    default: 'UI.AutomationTests'
  - name: testCategory
    displayName: Test Category
    type: string
    default: ''
  - name: testRunTitle
    displayName: Test Run Title
    type: string
    default: 'Test Results'
  - name: subscriptionName
    displayName: Key Vault Subscription Name
    type: string
    default: '**/TestResults/*.trx'
  - name: netVersion
    type: string
    default: '8.x'

steps:
  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: vh-infra-core-${{ lower(parameters.environment) }}'
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      KeyVaultName: 'vh-infra-core-${{ lower(parameters.environment) }}'
      SecretsFilter: 'azuread--tenantid'

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: vh-bookings-api-${{ lower(parameters.environment) }}'
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      KeyVaultName: 'vh-bookings-api-${{ lower(parameters.environment) }}'
      SecretsFilter: 'azuread--clientid, azuread--clientsecret, azuread--identifieruri, launchdarkly--sdkkey'

  - bash: |
      echo "##vso[task.setvariable variable=ApiClientConfiguration.TenantId;issecret=false]$(azuread--tenantid)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.ClientId;issecret=false]$(azuread--clientid)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.ClientSecret;issecret=false]$(azuread--clientsecret)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.BookingsApiResourceId;issecret=false]$(azuread--identifieruri)"
      echo "##vso[task.setvariable variable=ApiClientConfiguration.LaunchDarklyKey;issecret=false]$(launchdarkly--sdkkey)"
    displayName: Change Bookings API client secrets to variables

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: vh-video-api-${{ lower(parameters.environment) }}'
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      KeyVaultName: 'vh-video-api-${{ lower(parameters.environment) }}'
      SecretsFilter: 'azuread--identifieruri'

  - bash: |
      echo "##vso[task.setvariable variable=ApiClientConfiguration.VideoApiResourceId;issecret=false]$(azuread--identifieruri)"
    displayName: Change Video API client secrets to variables

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: vh-user-api-${{ lower(parameters.environment) }}'
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      KeyVaultName: 'vh-user-api-${{ lower(parameters.environment) }}'
      SecretsFilter: 'azuread--identifieruri'

  - bash: |
      echo "##vso[task.setvariable variable=ApiClientConfiguration.UserApiResourceId;issecret=false]$(azuread--identifieruri)"
    displayName: Change User API client secrets to variables

  # inserts variables to help create unique test names
  - task: gitversion/setup@0
    displayName: Install GitVersion
    inputs:
      versionSpec: '6.x'

  - task: gitversion/execute@0
    displayName: Determine Version
    inputs:
      useConfigFile: true
      configFilePath: 'GitVersion.yml'

  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: sdk
      version: ${{ parameters.netVersion }}
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: Verify .NET Version
    inputs:
      testRunTitle: Acceptance Tests
      command: custom
      custom: --version

  - task: FileTransform@2
    displayName: Transform App Settings
    inputs:
      folderPath: ${{ parameters.projectpath }}
      jsonTargetFiles: '**/appsettings.json'

  - pwsh: |
      Get-Content "${{ parameters.projectpath }}/appsettings.json"
    displayName: Print App Settings

  - bash: |
      sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
    displayName: Add NuGet Feed Authentication
    workingDirectory: $(Build.SourcesDirectory)

  - task: DotNetCoreCLI@2
    displayName: Run UI Tests
    inputs:
      command: test
      projects: '${{ parameters.projectpath }}/*.csproj'
      publishTestResults: true
      testRunTitle: '${{ parameters.testRunTitle }}'
      ${{ if eq(parameters.testCategory, '') }}:
        arguments: '--configuration Release'
      ${{ else }}:
        arguments: '--configuration Release --filter TestCategory=${{ parameters.testCategory }}'
