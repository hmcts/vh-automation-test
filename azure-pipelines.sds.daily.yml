trigger: none

pr: none

schedules:
  - cron: "15 8 * * *"
    displayName: Daily build
    always: true
    branches:
      include:
        - master

parameters:
  - name: runUITests
    displayName: Run UI Tests
    type: boolean
    default: true

  - name: runA11yTests
    displayName: Run Accessibiliy Tests
    type: boolean
    default: true

  - name: environment
    type: string
    default: Dev
    values:
      - Dev
      - Test
      - Stg
      - Prod

pool:
  vmImage: ubuntu-22.04

stages:
  ####################################################
  # UI Testing. ######################################
  - stage: Automation_Tests_${{ parameters.environment }}
    displayName: Automation Tests ${{ parameters.environment }}
    jobs:
      - ${{ if eq(parameters.runUITests, true) }}:
          - job: UI_Tests
            displayName: UI Tests ${{ parameters.environment }}
            variables:
              - name: env
                value: ${{ lower(replace(parameters.environment, 'stg', 'staging')) }}
              - name: projectPath
                value: "UI.NUnitVersion"
              - group: vh-automation-test-${{ parameters.environment }}
              - group: Saucelabs
              - group: KinlyConfiguration_${{ parameters.environment }}
              - name: SystemConfiguration.EnvironmentConfigSettings.RunOnSauceLabs
                value: true
              - name: SystemConfiguration.EnvironmentConfigSettings.SauceLabsConfiguration.SauceUsername
                value: $(Saucelabs:Username)
              - name: SystemConfiguration.EnvironmentConfigSettings.SauceLabsConfiguration.SauceAccessKey
                value: $(Saucelabs:AccessKey)
              - name: SystemConfiguration.EnvironmentConfigSettings.UKConferencePhoneNumber
                value: $(ConferencePhoneNumber)
              - name: SystemConfiguration.LogLocation
                value: $(Build.ArtifactStagingDirectory)/TestResults/Logs
              - name: SystemConfiguration.EnvironmentConfigSettings.TestResultsDirectory
                value: $(Build.ArtifactStagingDirectory)/TestResults/
              - name: ApiClientConfiguration.BookingsApi.Url
                value: https://vh-bookings-api.dev.platform.hmcts.net

            steps:
              - task: AzureKeyVault@1
                displayName: "Azure Key Vault: vh-infra-core-dev"
                inputs:
                  azureSubscription: "DTS-SHAREDSERVICES-DEV-Video Hearings"
                  KeyVaultName: "vh-infra-core-dev"
                  SecretsFilter: "azuread--tenantid"

              - task: AzureKeyVault@1
                displayName: "Azure Key Vault: vh-bookings-api-dev"
                inputs:
                  azureSubscription: "DTS-SHAREDSERVICES-DEV-Video Hearings"
                  KeyVaultName: "vh-bookings-api-dev"
                  SecretsFilter: "azuread--clientid, azuread--clientsecret, azuread--identifieruri"

              - bash: |
                  echo "##vso[task.setvariable variable=ApiClientConfiguration.TenantId;issecret=false]$(azuread--tenantid)"
                  echo "##vso[task.setvariable variable=ApiClientConfiguration.ClientId;issecret=false]$(azuread--clientid)"
                  echo "##vso[task.setvariable variable=ApiClientConfiguration.ClientSecret;issecret=false]$(azuread--clientsecret)"
                  echo "##vso[task.setvariable variable=ApiClientConfiguration.BookingsApi.ResourceId;issecret=false]$(azuread--identifieruri)"
                displayName: Change api client secrets to variables

              # inserts variables to help create unique test names
              - task: gitversion/setup@0
                displayName: Install GitVersion
                inputs:
                  versionSpec: "5.11.1"

              - task: gitversion/execute@0
                displayName: Determine Version

              - task: FileTransform@1
                displayName: Transform App Settings
                inputs:
                  folderPath: $(projectPath)
                  fileType: json
                  targetFiles: "**/appsettings.json"

              - pwsh: |
                  Get-Content "$(projectPath)/appsettings.json"
                displayName: Print App Settings

              - bash: |
                  sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
                displayName: Add NuGet Feed Authentication
                workingDirectory: $(Build.SourcesDirectory)

              - task: DotNetCoreCLI@2
                displayName: Run UI Tests
                inputs:
                  command: test
                  projects: "$(projectPath)/*.csproj"
                  arguments: "--configuration Release"
                  publishTestResults: true
                  testRunTitle: "UI Tests ${{ parameters.environment }}"

      - ${{ if eq(parameters.runA11yTests, true) }}:
          - job: A11Y_Tests
            displayName: A11Y Tests ${{ parameters.environment }}
            variables:
              - name: env
                value: ${{ lower(replace(parameters.environment, 'stg', 'staging')) }}
              - name: projectPath
                value: "UI.NUnitVersion"
              - group: vh-automation-test-${{ parameters.environment }}
              - group: Saucelabs
              - group: KinlyConfiguration_${{ parameters.environment }}
              - name: SystemConfiguration.EnvironmentConfigSettings.RunOnSauceLabs
                value: true
              - name: SystemConfiguration.EnvironmentConfigSettings.EnableAccessibilityCheck
                value: true
              - name: SystemConfiguration.EnvironmentConfigSettings.AccessibilityReportFilePath
                value: $(Build.ArtifactStagingDirectory)/axe-results.json
              - name: SystemConfiguration.EnvironmentConfigSettings.AccessibilityHtmlReportFilePath
                value: $(Build.ArtifactStagingDirectory)/axe-results.html
              - name: SystemConfiguration.EnvironmentConfigSettings.SauceLabsConfiguration.SauceUsername
                value: $(Saucelabs:Username)
              - name: SystemConfiguration.EnvironmentConfigSettings.SauceLabsConfiguration.SauceAccessKey
                value: $(Saucelabs:AccessKey)
              - name: SystemConfiguration.EnvironmentConfigSettings.UKConferencePhoneNumber
                value: $(ConferencePhoneNumber)
              - name: SystemConfiguration.LogLocation
                value: $(Build.ArtifactStagingDirectory)/TestResults/Logs
              - name: SystemConfiguration.EnvironmentConfigSettings.TestResultsDirectory
                value: $(Build.ArtifactStagingDirectory)/TestResults/

            steps:
              # inserts variables to help create unique test names
              - task: gitversion/setup@0
                displayName: Install GitVersion
                inputs:
                  versionSpec: "5.11.1"

              - task: gitversion/execute@0
                displayName: Determine Version

              - task: FileTransform@1
                displayName: Transform App Settings
                inputs:
                  folderPath: $(projectPath)
                  fileType: json
                  targetFiles: "**/appsettings.json"

              - pwsh: |
                  Get-Content "$(projectPath)/appsettings.json"
                displayName: Print App Settings

              - bash: |
                  sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
                displayName: Add NuGet Feed Authentication
                workingDirectory: $(Build.SourcesDirectory)

              - task: DotNetCoreCLI@2
                displayName: Run UI Tests
                inputs:
                  command: test
                  projects: "$(projectPath)/*.csproj"
                  arguments: "--configuration Release --filter TestCategory=a11y"
                  publishTestResults: true
                  testRunTitle: "A11Y Tests ${{ parameters.environment }}"

              - task: PublishBuildArtifacts@1
                displayName: Publish A11Y Output
                condition: succeededOrFailed()
                inputs:
                  pathToPublish: "$(Build.ArtifactStagingDirectory)/"
                  artifactName: A11Y_Report
