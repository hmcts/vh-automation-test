trigger: none

pr: none

parameters:
  - name: runUITests
    displayName: Run UI Tests
    type: boolean
    default: true

  - name: runApiTests
    displayName: Run API Tests
    type: boolean
    default: false

  - name: environment
    type: string
    default: Dev
    values:
      - Dev
      - Test
      - Stg
      - Prod

pool:
  name: "VH Self Hosted"

stages:
  ####################################################
  # UI Testing. ######################################
  - stage: Automation_Tests_${{ parameters.environment }}
    displayName: Automation Tests ${{ parameters.environment }}
    jobs:
      - ${{ if eq(parameters.runUITests, true) }}:
          - job: UI_Tests
            displayName: UI Tests ${{ parameters.environment }}
            variables:
              - name: env
                value: ${{ lower(replace(parameters.environment, 'Stg', 'staging')) }}
              - name: projectPath
                value: "UI/Selenium"
              - group: vh-automation-test-${{ parameters.environment }}
              - group: Saucelabs
              - group: KinlyConfiguration_${{ parameters.environment }}
              - name: SystemConfiguration.EnvironmentConfigSettings.RunOnSauceLabs
                value: true
              - name: SystemConfiguration.EnvironmentConfigSettings.SauceLabsConfiguration.SauceUsername
                value: $(Saucelabs:Username)
              - name: SystemConfiguration.EnvironmentConfigSettings.SauceLabsConfiguration.SauceAccessKey
                value: $(Saucelabs:AccessKey)
              - name: SystemConfiguration.EnvironmentConfigSettings.UKConferencePhoneNumber
                value: $(ConferencePhoneNumber)
              - name: SystemConfiguration.LogLocation
                value: $(Build.ArtifactStagingDirectory)/TestResults/Logs
              - name: SystemConfiguration.EnvironmentConfigSettings.TestResultsDirectory
                value: $(Build.ArtifactStagingDirectory)/TestResults/

            steps:                        
              - task: FileTransform@1
                displayName: Transform App Settings
                inputs:
                  folderPath: $(projectPath)
                  fileType: json
                  targetFiles: "**/appsettings.json"

              - pwsh: |
                 Get-Content "$(projectPath)/appsettings.json"
                displayName: Print App Settings

              - task: DotNetCoreCLI@2
                displayName: Run UI Tests
                continueOnError: true
                inputs:
                  command: test
                  projects: "$(projectPath)/*.csproj"
                  arguments: "--configuration Release --filter TestCategory=Smoketest"
                  publishTestResults: true

              - task: PublishBuildArtifacts@1
                displayName: Publish Test Results Output
                inputs:
                  pathToPublish: "$(Build.ArtifactStagingDirectory)/TestResults/"
                  artifactName: TestResultsOutput
